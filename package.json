{
  "name": "serverless-server",
  "version": "1.0.0",
  "description": "",
  "main": "app.js",
  "author": "Colton Brown <coltonTB@me.com> (http://coltontbrown.com/)",
  "license": "ISC",
  "config": {
    "s3BucketName": "cb-dev-1",
    "region": "us-west-1",
    "lambdaFunctionName": "ExpressTestFunction",
    "lambdaSources": "dist/build dist/node_modules",
    "assetSources": "dist/assets"
  },
  "dependencies": {
    "aws-serverless-express": "^2.1.3",
    "body-parser": "^1.16.1",
    "cors": "^2.8.1",
    "dotenv": "^4.0.0",
    "express": "^4.14.1",
    "history": "^3.2.0",
    "react": "^15.4.2",
    "react-dom": "^15.4.2",
    "react-router": "^3.0.2"
  },
  "devDependencies": {
    "babel-cli": "^6.23.0",
    "babel-core": "^6.23.1",
    "babel-eslint": "^7.1.1",
    "babel-loader": "^6.3.2",
    "babel-preset-es2015": "^6.22.0",
    "babel-preset-react": "^6.23.0",
    "babel-preset-stage-2": "^6.22.0",
    "css-loader": "^0.27.2",
    "eslint": "^3.16.1",
    "eslint-plugin-react": "^6.10.0",
    "extract-text-webpack-plugin": "^2.1.0",
    "node-sass": "^4.5.0",
    "sass-loader": "^6.0.3",
    "style-loader": "^0.13.2",
    "webpack": "^2.2.1"
  },
  "scripts": {
    "lambda-zip": "cd dist && zip -q -r lambda-function.zip lambda.js routes.js server node_modules shared",
    "lambda-upload": "aws s3 cp ./dist/lambda-function.zip s3://$npm_package_config_s3BucketName --region $npm_package_config_region",
    "lambda-update": "aws lambda update-function-code --function-name $npm_package_config_lambdaFunctionName --region $npm_package_config_region --zip-file fileb://./dist/lambda-function.zip",
    "lambda-deploy": "npm run lambda-zip && npm run lambda-upload && npm run lambda-update",
    "deploy-assets": "aws s3 cp --recursive $npm_package_config_assetSources s3://$npm_package_config_s3BucketName --region $npm_package_config_region",
    "deploy": "rm -rf ./dist/* && npm run build && npm run build-node-modules && npm run deploy-lambda && npm run deploy-assets",
    "build-node-modules": "cp package.json dist && cd dist && npm i --production",

    "build": "./node_modules/.bin/webpack",
    "local": "./node_modules/.bin/nodemon ./dist/assets/server-bundle.js",
    "watch": "npm run build -- --watch"
  }
}
